# Generated by Django 4.1.7 on 2023-03-22 16:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("antigenapi", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SequencingRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("sent_date", models.DateField(null=True)),
                ("results_date", models.DateField(null=True)),
                (
                    "results_file",
                    models.FileField(null=True, upload_to="uploads/sequencingresults/"),
                ),
                ("added_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SequencingRunPlateThreshold",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("optical_density_threshold", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="SequencingRunWell",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plate", models.PositiveIntegerField()),
                (
                    "location",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "A1"),
                            (2, "A2"),
                            (3, "A3"),
                            (4, "A4"),
                            (5, "A5"),
                            (6, "A6"),
                            (7, "A7"),
                            (8, "A8"),
                            (9, "A9"),
                            (10, "A10"),
                            (11, "A11"),
                            (12, "A12"),
                            (13, "B1"),
                            (14, "B2"),
                            (15, "B3"),
                            (16, "B4"),
                            (17, "B5"),
                            (18, "B6"),
                            (19, "B7"),
                            (20, "B8"),
                            (21, "B9"),
                            (22, "B10"),
                            (23, "B11"),
                            (24, "B12"),
                            (25, "C1"),
                            (26, "C2"),
                            (27, "C3"),
                            (28, "C4"),
                            (29, "C5"),
                            (30, "C6"),
                            (31, "C7"),
                            (32, "C8"),
                            (33, "C9"),
                            (34, "C10"),
                            (35, "C11"),
                            (36, "C12"),
                            (37, "D1"),
                            (38, "D2"),
                            (39, "D3"),
                            (40, "D4"),
                            (41, "D5"),
                            (42, "D6"),
                            (43, "D7"),
                            (44, "D8"),
                            (45, "D9"),
                            (46, "D10"),
                            (47, "D11"),
                            (48, "D12"),
                            (49, "E1"),
                            (50, "E2"),
                            (51, "E3"),
                            (52, "E4"),
                            (53, "E5"),
                            (54, "E6"),
                            (55, "E7"),
                            (56, "E8"),
                            (57, "E9"),
                            (58, "E10"),
                            (59, "E11"),
                            (60, "E12"),
                            (61, "F1"),
                            (62, "F2"),
                            (63, "F3"),
                            (64, "F4"),
                            (65, "F5"),
                            (66, "F6"),
                            (67, "F7"),
                            (68, "F8"),
                            (69, "F9"),
                            (70, "F10"),
                            (71, "F11"),
                            (72, "F12"),
                            (73, "G1"),
                            (74, "G2"),
                            (75, "G3"),
                            (76, "G4"),
                            (77, "G5"),
                            (78, "G6"),
                            (79, "G7"),
                            (80, "G8"),
                            (81, "G9"),
                            (82, "G10"),
                            (83, "G11"),
                            (84, "G12"),
                            (85, "H1"),
                            (86, "H2"),
                            (87, "H3"),
                            (88, "H4"),
                            (89, "H5"),
                            (90, "H6"),
                            (91, "H7"),
                            (92, "H8"),
                            (93, "H9"),
                            (94, "H10"),
                            (95, "H11"),
                            (96, "H12"),
                        ]
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="elisaplate",
            name="optical_density_threshold",
        ),
        migrations.AddConstraint(
            model_name="library",
            constraint=models.UniqueConstraint(
                fields=("project", "cohort"), name="unique_project_cohort"
            ),
        ),
        migrations.AddField(
            model_name="sequencingrunwell",
            name="elisa_well",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="antigenapi.elisawell"
            ),
        ),
        migrations.AddField(
            model_name="sequencingrunwell",
            name="sequencing_run",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="antigenapi.sequencingrun",
            ),
        ),
        migrations.AddField(
            model_name="sequencingrunplatethreshold",
            name="elisa_plate",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="antigenapi.elisaplate"
            ),
        ),
        migrations.AddField(
            model_name="sequencingrunplatethreshold",
            name="sequencing_run",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="antigenapi.sequencingrun",
            ),
        ),
        migrations.AddField(
            model_name="sequencingrun",
            name="added_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddConstraint(
            model_name="sequencingrunwell",
            constraint=models.UniqueConstraint(
                fields=("sequencing_run", "plate", "location"), name="unique_location"
            ),
        ),
        migrations.AddConstraint(
            model_name="sequencingrunwell",
            constraint=models.UniqueConstraint(
                fields=("sequencing_run", "elisa_well"), name="unique_elisa_well"
            ),
        ),
        migrations.AddConstraint(
            model_name="sequencingrunplatethreshold",
            constraint=models.UniqueConstraint(
                fields=("sequencing_run", "elisa_plate"), name="unique_plate"
            ),
        ),
    ]
